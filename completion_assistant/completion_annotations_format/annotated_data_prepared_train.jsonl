{"prompt":"I seek a UNI\/WETH swap that isn't atomic\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Launch a non-atomic USDC-WETH exchange\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Get going with a non-atomic UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start up an easy WETH and USDC exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Prepare a WETH-USDC exchange without extras\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Get going with a non-atomic WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to do a non-atomic UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to execute a UNI-WETH swap without atomic transactions\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to swap WETH and UNI without atomic execution\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start up a WETH and UNI exchange without atomicity\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Begin a WETH and UNI swap without atomic transactions\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Initiate an uncomplicated WETH and UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Launch a no-nonsense USDC-WETH exchange\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start up an easy WETH and UNI exchange\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a WETH and USDC swap without atomic requirements\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set up a WETH-USDC trade without complexities\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Organize a WETH and UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to do a USDC and WETH swap with no atomic execution\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Initiate an uncomplicated UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to do a simple USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start up an easy UNI and WETH exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to execute a simple USDC and WETH exchange\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to do a non-atomic WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to conduct a swap between USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a WETH and UNI swap without atomic requirements\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to do a WETH and USDC swap with no atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a WETH-UNI transaction without atomic execution\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Launch an elementary USDC-WETH exchange\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Configure a non-atomic USDC-WETH exchange\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Configure an easy WETH and UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I wish to swap WETH with USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to switch UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Begin a straightforward UNI and WETH trade\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Trigger a straightforward UNI and WETH trade\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to do a simple WETH and USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Organize a simple UNI and WETH exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Implement a USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to perform a WETH and UNI exchange without atomicity\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Establish a UNI-WETH exchange without atomicity\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Prepare a non-atomic exchange between WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Activate a non-atomic WETH-UNI exchange\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Initiate a WETH and UNI swap without atomic transactions\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start a WETH and USDC swap without bells and whistles\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to perform a WETH-UNI swap without atomicity\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I wish to swap UNI with WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Prepare a straightforward WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a UNI-WETH trade without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start up a USDC and WETH exchange without atomicity\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a non-atomic transaction between WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to switch WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Arrange a simple WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a non-atomic transaction between USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set up a WETH and UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to execute a WETH and UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Arrange a USDC and WETH swap without atomic transactions\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to carry out a WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Begin a USDC and WETH swap without atomic transactions\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set in motion a non-atomic USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set up a non-atomic WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Organize a simple WETH and UNI exchange\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Begin a plain WETH and USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Exchange UNI for WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to conduct a basic swap between WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start a WETH-USDC swap without atomicity\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Begin a UNI and WETH swap without atomic transactions\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a WETH\/USDC exchange without atomicity\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Implement a USDC-WETH trade with no frills\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I desire a WETH and UNI swap without atomic execution\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Commence a non-atomic UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Prepare a non-atomic exchange between USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to carry out a simple UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set in motion a USDC-WETH swap without complications\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Kick off an uncomplicated USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a non-atomically executed WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to make a basic swap between WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a WETH and UNI exchange without atomic transactions\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Trigger a USDC and WETH swap without atomic execution\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Activate a WETH-UNI exchange without frills\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Commence a simple WETH-USDC trade\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Get going with a basic WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a WETH\/UNI exchange that's non-atomic\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Initiate an uncomplicated WETH and USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to execute a straightforward WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to carry out a WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Establish a WETH-UNI exchange without atomicity\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to swap UNI and WETH without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to do a non-atomic WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Establish a simple WETH and UNI trade\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Configure an easy USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a WETH-USDC exchange that isn't atomic\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to perform a WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a UNI-WETH swap without atomic transaction execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to execute a USDC-WETH swap without atomic transactions\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Establish a basic UNI and WETH exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set up a USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Conduct a WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to do a WETH-UNI swap that's non-atomic\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to carry out a simple WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set in motion a WETH-USDC swap without complications\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to do a WETH-USDC swap that's non-atomic\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a USDC and WETH swap without atomic requirements\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to perform a WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Commence a non-atomic WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a USDC-WETH swap without atomic operations\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to make a straightforward WETH and USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Exchange WETH for UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to conduct a swap between WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set in motion a simple USDC-WETH trade\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Arrange a WETH and UNI swap without atomic transactions\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Implement a UNI-WETH trade with no frills\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to have a non-atomic UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Prepare a non-atomic exchange between WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Organize a UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a USDC\/WETH exchange that's non-atomic\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Initiate a WETH and USDC swap without atomic transactions\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to conduct a basic swap between UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Conduct a WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to swap WETH and USDC without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start a basic exchange between WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to do a simple exchange between WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Create a swap between WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Configure a no-fuss UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Trigger a WETH and USDC swap without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Create a swap between UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set up a UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I desire a WETH and USDC swap without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to execute a simple WETH and UNI exchange\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to perform a UNI and WETH exchange without atomicity\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Activate a non-atomic WETH-USDC exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to carry out a UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I desire to swap UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Begin a plain USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Implement a WETH-USDC trade with no frills\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a UNI-WETH swap that isn't atomic\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a non-atomically executed UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a WETH-USDC transaction without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Organize a bare-bones USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Initiate a swap between USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a non-atomic transaction between UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start a basic exchange between USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Implement a UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Arrange a simple UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Get going with a basic UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a UNI and WETH swap without atomic requirements\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Configure an easy UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Implement a basic WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Activate a non-atomic UNI-WETH exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Prepare a non-atomic exchange between UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Trigger a WETH and UNI swap without atomic execution\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Commence a hassle-free UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to conduct a swap between UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I wish to swap USDC with WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to perform a USDC and WETH exchange without atomicity\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to make a straightforward USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to switch WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Initiate a swap between WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to carry out a WETH and USDC swap without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Configure a non-atomic WETH-USDC exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Implement a WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to make a basic swap between WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to execute a WETH-UNI swap without atomic transactions\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a UNI-WETH swap without atomic operations\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Prepare a USDC-WETH exchange without extras\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Trigger a UNI and WETH swap without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to switch USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Get going with a basic USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set up a non-atomic swap for WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to swap UNI for WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to trade WETH for USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Arrange an elementary UNI and WETH exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Execute a WETH and UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Initiate a WETH-USDC exchange without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Arrange an elementary USDC and WETH exchange\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a UNI-WETH transaction without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I desire a non-atomic UNI-WETH trade\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to swap WETH for UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to swap USDC for WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Perform a UNI to WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Prepare a straightforward WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Get going with a non-atomic WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a USDC-WETH exchange that isn't atomic\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Implement a non-atomic swap of UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set up a non-atomic WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to perform a no-frills USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to carry out a USDC and WETH swap without atomic execution\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Configure an easy WETH and USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Configure a no-fuss WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Commence a simple WETH-UNI trade\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I desire to swap USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Configure a non-atomic UNI-WETH exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Activate a UNI-WETH exchange without frills\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a UNI and WETH exchange without atomic transactions\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Perform a WETH to UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Trigger a straightforward WETH and UNI trade\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Launch a non-atomic WETH-UNI exchange\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to carry out a USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to make a basic swap between UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Arrange an elementary WETH and UNI exchange\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I desire a UNI and WETH swap without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Exchange WETH for USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Activate a USDC-WETH exchange without frills\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Configure a no-fuss WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Commence a hassle-free USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Kick off a WETH and UNI swap without atomic execution\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to carry out a simple WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to do a WETH and UNI swap with no atomic execution\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I wish for a non-atomic UNI-WETH exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to do a simple UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to execute a USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Organize a bare-bones UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start a basic exchange between UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set in motion a non-atomic WETH and UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a non-atomic swap between WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Implement a basic WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to conduct a non-atomic USDC and WETH exchange\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a USDC-WETH swap that isn't atomic\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to execute a WETH and USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I wish for a non-atomic USDC-WETH exchange\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to execute a straightforward UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to do a UNI-WETH swap that's non-atomic\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Execute a WETH and USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Kick off an uncomplicated WETH and UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a WETH-USDC swap without atomic operations\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Organize a USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to execute a straightforward USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to perform a WETH and USDC exchange without atomicity\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I desire a non-atomic WETH-USDC trade\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Arrange a simple WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Perform a WETH to USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Prepare a straightforward UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Organize a USDC-WETH swap without atomic execution\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start up an easy USDC and WETH exchange\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Arrange a WETH and USDC swap without atomic transactions\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to swap WETH for USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to make a straightforward UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a WETH-UNI swap without atomic operations\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to exchange WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Initiate a USDC and WETH swap without atomic transactions\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Implement a basic UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to do a USDC-WETH swap that's non-atomic\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to exchange UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set up a non-atomic UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to execute a WETH-USDC swap without atomic transactions\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Establish a simple WETH and USDC trade\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Activate a non-atomic USDC-WETH exchange\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Establish a USDC-WETH exchange without atomicity\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to perform a UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Begin a WETH and USDC swap without atomic transactions\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Implement a basic USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Launch an elementary WETH-USDC exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Initiate an uncomplicated USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to carry out a simple USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Organize a WETH-USDC swap without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a USDC-WETH swap without atomic transaction execution\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start a UNI-WETH swap without atomicity\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to perform a no-frills WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to conduct a non-atomic UNI and WETH exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set up a UNI-WETH trade without complexities\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a non-atomic swap between USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to make a basic swap between USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to trade UNI for WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to execute a UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to trade USDC for WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Organize a simple WETH and USDC exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Get going with a non-atomic USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to do a simple exchange between UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a non-atomic exchange between WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Execute a UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a WETH-USDC swap without atomic transaction execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a non-atomic exchange between UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to conduct a non-atomic WETH and USDC exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I seek a WETH\/UNI swap that isn't atomic\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Launch a non-atomic WETH-USDC exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Implement a non-atomic swap of WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set in motion a WETH-UNI swap without complications\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a non-atomic exchange between USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Establish a simple UNI and WETH trade\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a UNI\/WETH exchange that's non-atomic\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I wish to swap WETH with UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to conduct a non-atomic WETH and UNI exchange\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to make a straightforward WETH and UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Kick off a UNI and WETH swap without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a non-atomic UNI\/WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a WETH and USDC exchange without atomic transactions\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Arrange a simple USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to exchange USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set up a WETH-UNI trade without complexities\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a WETH-UNI swap without atomic transaction execution\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to swap USDC and WETH without atomic execution\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Begin a straightforward USDC and WETH trade\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Swap WETH with USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Initiate a UNI and WETH swap without atomic transactions\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a non-atomic WETH\/UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Trigger a straightforward WETH and USDC trade\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Kick off an easy UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Commence a non-atomic USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I seek a USDC\/WETH swap that isn't atomic\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to perform a WETH-USDC swap without atomicity\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Swap WETH with UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a USDC and WETH exchange without atomic transactions\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set up a non-atomic swap for WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Organize a bare-bones WETH and UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to perform a USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I wish for a non-atomic WETH-USDC exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Exchange USDC for WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Launch a non-atomic UNI-WETH exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start a WETH and UNI swap without bells and whistles\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Prepare a straightforward USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Conduct a USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Configure a non-atomic WETH-UNI exchange\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a WETH-UNI trade without atomic execution\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a non-atomic exchange between WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a USDC-WETH transaction without atomic execution\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start a UNI and WETH swap without bells and whistles\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a WETH\/USDC exchange that's non-atomic\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to perform a no-frills WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I desire to swap WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to perform a basic USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a USDC\/WETH exchange without atomicity\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Set up a non-atomic USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Arrange a UNI and WETH swap without atomic transactions\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a non-atomic WETH\/USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to do a UNI and WETH swap with no atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start a WETH-UNI swap without atomicity\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want to carry out a UNI and WETH swap without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to perform a no-frills UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Implement a WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Create a swap between WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Organize a WETH-UNI swap without atomic execution\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Commence a simple USDC-WETH trade\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like to trade WETH for UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I'd like a UNI-WETH exchange that isn't atomic\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a WETH-UNI swap that isn't atomic\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Kick off a WETH and USDC swap without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Start up a WETH and USDC exchange without atomicity\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Execute a USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"Kick off a USDC and WETH swap without atomic execution\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
{"prompt":"I want a WETH-USDC trade without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) END"}
