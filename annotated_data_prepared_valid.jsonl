{"prompt":"Initiate a swap between WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I desire to swap WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want to perform a basic WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like to do a simple WETH and UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want to carry out a WETH and UNI swap without atomic execution\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I wish for a non-atomic WETH-UNI exchange\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I desire a non-atomic WETH-UNI trade\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want a WETH\/UNI exchange without atomicity\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like a non-atomic transaction between WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like to have a non-atomic WETH and UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want a non-atomically executed WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like a WETH-UNI exchange that isn't atomic\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Initiate a WETH-UNI exchange without atomic execution\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Commence a non-atomic WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Start a basic exchange between WETH and UNI\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Launch an elementary WETH-UNI exchange\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Begin a plain WETH and UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Get going with a basic WETH-UNI swap\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Prepare a WETH-UNI exchange without extras\n\n###\n\n","completion":" uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=uni,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Initiate a swap between UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Swap UNI with WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Conduct a UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want to perform a basic UNI-WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like to execute a simple UNI and WETH exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like to perform a UNI-WETH swap without atomicity\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like a non-atomic swap between UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want a UNI\/WETH exchange without atomicity\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Initiate a UNI-WETH exchange without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Set up a non-atomic swap for UNI and WETH\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Organize a UNI-WETH swap without atomic execution\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Set in motion a non-atomic UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Start up a UNI and WETH exchange without atomicity\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Set in motion a UNI-WETH swap without complications\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Kick off an uncomplicated UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Launch an elementary UNI-WETH exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Begin a plain UNI and WETH swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Commence a simple UNI-WETH trade\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Prepare a UNI-WETH exchange without extras\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Set in motion a simple UNI-WETH trade\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Launch a no-nonsense UNI-WETH exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Perform a USDC to WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Swap USDC with WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Create a swap between USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like to conduct a basic swap between USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want to do a simple exchange between USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like to do a non-atomic USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like to perform a USDC-WETH swap without atomicity\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like a non-atomic USDC\/WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I desire a USDC and WETH swap without atomic execution\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want a USDC-WETH trade without atomic execution\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I desire a non-atomic USDC-WETH trade\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like to have a non-atomic USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want a non-atomically executed USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Initiate a USDC-WETH exchange without atomic execution\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Set up a non-atomic swap for USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Start a USDC-WETH swap without atomicity\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Implement a non-atomic swap of USDC and WETH\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Organize a simple USDC and WETH exchange\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Establish a simple USDC and WETH trade\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Trigger a straightforward USDC and WETH trade\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Set up a USDC-WETH trade without complexities\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Configure a no-fuss USDC-WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Start a USDC and WETH swap without bells and whistles\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Establish a basic USDC and WETH exchange\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Kick off an easy USDC and WETH swap\n\n###\n\n","completion":" usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=usdc,\n        buy_token=weth,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Set up a WETH and USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Organize a WETH and USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want to exchange WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want to conduct a swap between WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want to perform a basic WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want to execute a straightforward WETH-USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like to conduct a basic swap between WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want to do a simple exchange between WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like to execute a simple WETH and USDC exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I want a WETH-USDC swap that isn't atomic\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I seek a WETH\/USDC swap that isn't atomic\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"I'd like to have a non-atomic WETH and USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Implement a non-atomic swap of WETH and USDC\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Establish a WETH-USDC exchange without atomicity\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Set in motion a non-atomic WETH and USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Kick off an uncomplicated WETH and USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Activate a WETH-USDC exchange without frills\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Arrange an elementary WETH and USDC exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Organize a bare-bones WETH and USDC swap\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
{"prompt":"Establish a basic WETH and USDC exchange\n\n###\n\n","completion":" weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    usdc = ew3.eulith_get_erc_token(TokenSymbol.USDC)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=usdc,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs) ######"}
