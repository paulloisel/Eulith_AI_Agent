print("from eulith_web3.erc20\n import TokenSymbol\nfrom eulith_web3.eulith_web3 import *\nfrom eulith_web3.signing import construct_signing_middleware, LocalSigner\n\nif __name__ == '__main__':\n    wallet = LocalSigner(\"...\") # YOUR PRIVATE KEY GOES HERE\n    ew3 = EulithWeb3(eulith_url=\"https://eth-main.eulithrpc.com/v0\",\n                     eulith_refresh_token=\"...\", # YOUR REFRESH TOKEN GOES HERE\n                     signing_middle_ware=construct_signing_middleware(wallet)) \n   \n   \n    # these are python bindings around the whole ERC20 contract\n    weth = ew3.eulith_get_erc_token(TokenSymbol.WETH)\n    uni = ew3.eulith_get_erc_token(TokenSymbol.UNI)\n    \n    _sell_amount=0.001 # just an arbitrary small number for example\n    \n    # set the swap parameters\n    swap_params = EulithSwapRequest(\n        sell_token=weth,\n        buy_token=uni,\n        sell_amount=_sell_amount, # quantity; no weird decimals, 0.001 means 0.001 WETH\n    )\n    \n    # get a swap quote\n    # txs is an array of transactions that make up the swap\n    quote, txs = ew3.eulith_swap_quote(swap_params)\n    \n    # convert eth to weth to prepare for the swap\n    eth_to_weth_tx = weth.deposit_eth(_sell_amount)\n    eth_to_weth_tx['from'] = wallet.address\n    ew3.eth.send_transaction(eth_to_weth_tx)\n    \n    # if you decide you like the quote, send the swap transactions\n    # this function is used to take an array of transactions and batch them atomically\n    # does not get sent to the blockchain\n    ew3.eulith_send_multi_transaction(txs)")